class Solution
{
    public:
    //Heapify function to maintain heap property.
    void heapify(int arr[], int n, int i) {
        
       int left=2*i+1;
       int right=2*i+2;
       int root=i;
       
       
    if(left <n && arr[left]>arr[root]){
        root=left;
    }
    
    if(right <n && arr[right]>arr[root]){
        root=right;
    }
    
    if(root!=i){
        swap(arr[i],arr[root]);
        heapify(arr,n,root);
    }

        

    }
    
    
    

    public:
    
    //Function to build a Heap from array.
    void buildHeap(int arr[], int n)  {
      
      for(int i=(n/2)-1;i>=0;i--){
          heapify(arr,n,i);
      }  
    
    }

    
    public:
    //Function to sort an array using Heap Sort.
    void heapSort(int arr[], int n){
        
      buildHeap(arr,n);  
        
     int size=n;
     
    while(size>0){
      
      //step 1
        swap(arr[0],arr[size-1]);
        size--;
       
       //step 2 
        heapify(arr,size,0);
        
    } 
    
    
    

    }
};
